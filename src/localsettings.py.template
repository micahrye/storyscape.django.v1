'''
When running the project locally, first copy this file over to a file named localsettings.py. Then, modify that file however fits your system.

After that, you can run the project with:

./src/manage.py runserver --settings=localsettings

Please make sure you do not modify this file with anything specific for your system.

If you'd like to use this settings file out of the box, it should work, so long as you have sqlite and you create the directory /var/log/storyscape/

'''

 
from settings import * #@UnusedWildImport

DEBUG = True
TEMPLATE_DEBUG = DEBUG

INTERNAL_IPS = ('127.0.0.1',)

STORYSCAPE_IMAGE_URL_ROOT = '/opt/mit/media/storyscape_media/stories/' 
MEDIALIBRARY_URL_ROOT = '/opt/mit/media/' 
MEDIA_ROOT = '/opt/mit/media/'
STATIC_ROOT = '/opt/mit/static/'


DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.sqlite3', # Add 'postgresql_psycopg2', 'mysql', 'sqlite3' or 'oracle'.
        'NAME': '/opt/storyscape.db',                      # Or path to database file if using sqlite3.
        # The following settings are not used with sqlite3:
        'USER': '',
        'PASSWORD': '',
        'HOST': '',                      # Empty for localhost through domain sockets or '127.0.0.1' for localhost through TCP.
        'PORT': '',                      # Set to empty string for default.
    }
}


LOGGING = {
    'version': 1,
    'disable_existing_loggers': True,
    'formatters': {
        'standard': {
            'format' : "[%(asctime)s] %(levelname)s [%(name)s:%(lineno)s] %(message)s",
            'datefmt' : "%d/%b/%Y %H:%M:%S"
        },
    },
    'handlers': {
        'null': {
            'level':'DEBUG',
            'class':'django.utils.log.NullHandler',
        },
        'logfile': {
            'level':'DEBUG',
            'class':'logging.handlers.RotatingFileHandler',
            'filename': "/var/log/storyscape/storyscape.log",
            'maxBytes': 50000,
            'backupCount': 2,
            'formatter': 'standard',
        },
        'console':{
            'level':'INFO',
            'class':'logging.StreamHandler',
            'formatter': 'standard'
        },
    },
    'loggers': {
        'django': {
            'handlers':['console'],
            'propagate': True,
            'level':'ERROR',
        },
        'django.db.backends': {
            'handlers': ['console'],
            'level': 'ERROR',
            'propagate': False,
        },
        '': {
            'handlers': ['console'],
            'level': 'WARN',
        },
    }
}
